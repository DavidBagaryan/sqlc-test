// Code generated by sqlc. DO NOT EDIT.
// source: query.sql

package repository

import (
	"context"
)

const getCountIntTableByStatus = `-- name: GetCountIntTableByStatus :one
SELECT count(*)
FROM int_status
WHERE status & $1 != 0
`

func (q *Queries) GetCountIntTableByStatus(ctx context.Context, status int32) (int64, error) {
	row := q.db.QueryRowContext(ctx, getCountIntTableByStatus, status)
	var count int64
	err := row.Scan(&count)
	return count, err
}

const getCountJsonbTableByStatus = `-- name: GetCountJsonbTableByStatus :one
SELECT count(*)
FROM jsonb_status
WHERE status ? $1::text
`

func (q *Queries) GetCountJsonbTableByStatus(ctx context.Context, dollar_1 string) (int64, error) {
	row := q.db.QueryRowContext(ctx, getCountJsonbTableByStatus, dollar_1)
	var count int64
	err := row.Scan(&count)
	return count, err
}
